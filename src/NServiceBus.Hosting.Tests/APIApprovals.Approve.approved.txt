[assembly: System.CLSCompliantAttribute(true)]
[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute(@"NServiceBus.Hosting.ComponentTests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100cd8d2c941187b37b1108e7b07d88a7af9b6b3e133152f3d5403f0dba54a2a0c22111ace29f883c5a8e3899a3e150586cc332aa86a4a730c45acf07afacb38a400f5b55de677c60c54fae957d4af7f6986af56c668d33bf0c49c5360dba868a4ae8e297d1dec659a5eb6e97da27aa944edda1dc33d83824e3b0ee9df4dc1747dc")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute(@"NServiceBus.Hosting.Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100dde965e6172e019ac82c2639ffe494dd2e7dd16347c34762a05732b492e110f2e4e2e1b5ef2d85c848ccfb671ee20a47c8d1376276708dc30a90ff1121b647ba3b7259a6bc383b2034938ef0e275b58b920375ac605076178123693c6c4f1331661a62eba28c249386855637780e3ff5f23a6d854700eaa6803ef48907513b92")]
[assembly: System.Runtime.InteropServices.ComVisibleAttribute(false)]
[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5.2", FrameworkDisplayName=".NET Framework 4.5.2")]
namespace NServiceBus
{
    public interface AsA_Client { }
    public interface AsA_Server { }
    public class static EndpointConfigurationExtensions
    {
        public static void RunWhenEndpointStartsAndStops(this NServiceBus.EndpointConfiguration configuration, NServiceBus.IWantToRunWhenEndpointStartsAndStops startableAndStoppable) { }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.All)]
    public sealed class EndpointNameAttribute : System.Attribute
    {
        public EndpointNameAttribute(string name) { }
        public string Name { get; }
    }
    [System.AttributeUsageAttribute(System.AttributeTargets.Class | System.AttributeTargets.All)]
    public sealed class EndpointSLAAttribute : System.Attribute
    {
        public EndpointSLAAttribute(string sla) { }
        public System.TimeSpan SLA { get; }
    }
    [System.ObsoleteAttribute(". Will be treated as an error from version 8.0.0. Will be removed in version 9.0." +
        "0.", false)]
    public interface IConfigureThisEndpoint
    {
        void Customize(NServiceBus.EndpointConfiguration configuration);
    }
    public interface Integration : NServiceBus.IProfile { }
    public interface IProfile { }
    public interface IStartThisEndpoint
    {
        System.Threading.Tasks.Task<NServiceBus.IEndpointInstance> Start(string proposedEndpointName, System.Action<NServiceBus.EndpointConfiguration> applyHostConventions);
    }
    public interface IWantTheListOfActiveProfiles
    {
        System.Collections.Generic.IEnumerable<System.Type> ActiveProfiles { get; set; }
    }
    [JetBrains.Annotations.UsedImplicitlyAttribute(JetBrains.Annotations.ImplicitUseTargetFlags.Default | JetBrains.Annotations.ImplicitUseTargetFlags.Itself | JetBrains.Annotations.ImplicitUseTargetFlags.Members | JetBrains.Annotations.ImplicitUseTargetFlags.WithMembers)]
    public interface IWantToRunWhenEndpointStartsAndStops
    {
        System.Threading.Tasks.Task Start(NServiceBus.IMessageSession session);
        System.Threading.Tasks.Task Stop(NServiceBus.IMessageSession session);
    }
    public interface Lite : NServiceBus.IProfile { }
    public interface PerformanceCounters : NServiceBus.IProfile { }
    public interface Production : NServiceBus.IProfile { }
    public interface UsingTransport<T>
        where T : NServiceBus.Transports.TransportDefinition { }
}
namespace NServiceBus.Hosting.Profiles
{
    [System.ObsoleteAttribute("Configure logging in the constructor of the class that implements IConfigureThisE" +
        "ndpoint. Will be removed in version 8.0.0.", true)]
    public interface IConfigureLogging
    {
        void Configure(NServiceBus.IConfigureThisEndpoint specifier);
    }
    public interface IConfigureLoggingForProfile<T> : NServiceBus.Hosting.Profiles.IConfigureLogging
        where T : NServiceBus.IProfile { }
    public interface IHandleAnyProfile : NServiceBus.Hosting.Profiles.IHandleProfile, NServiceBus.Hosting.Profiles.IHandleProfile<NServiceBus.IProfile>, NServiceBus.IWantTheListOfActiveProfiles { }
    public interface IHandleProfile
    {
        void ProfileActivated(NServiceBus.EndpointConfiguration config);
    }
    public interface IHandleProfile<T> : NServiceBus.Hosting.Profiles.IHandleProfile
        where T : NServiceBus.IProfile { }
}
namespace NServiceBus.Hosting.Windows
{
    public class InstallWindowsHost : System.MarshalByRefObject
    {
        public InstallWindowsHost(System.Type endpointType, string[] args, string endpointName, System.Collections.Generic.IEnumerable<string> scannableAssembliesFullName) { }
        public void Install(string username) { }
    }
    public class Program
    {
        public Program() { }
    }
    public class WindowsHost : System.MarshalByRefObject
    {
        public WindowsHost(System.Type endpointType, string[] args, string endpointName, System.Collections.Generic.IEnumerable<string> scannableAssembliesFullName) { }
        public void Start() { }
        public void Stop() { }
    }
}